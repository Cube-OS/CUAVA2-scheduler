12:24:07 [0m[34m[INFO] [0mStarting file transfer client
12:24:07 [0m[34m[INFO] [0mDownloading remote to local: ./download/
12:24:07 [0m[36m[DEBUG] [0m(1) file_protocol::protocol: -> { ReqTransmit { channel_id: 816614, path: None } }
12:24:09 [0m[34m[INFO] [0mSuccessTransmit: 816614 ls_output.json f7c000a89d95c9d9306d437442de10fd 32 Some(33188) false
12:24:12 [0m[34m[INFO] [0mSuccessTransmit: 816614 dandelions.txt 90fc6a0bfb56723daeaaec7f1a3d1ce3 19 Some(33188) true
12:24:12 [0m[36m[DEBUG] [0m(1) file_protocol::protocol: <- { SuccessTransmit { channel_id: 816614, file_name: "ls_output.json", hash: "f7c000a89d95c9d9306d437442de10fd", num_chunks: 32, mode: Some(33188), last: false } }
12:24:12 [0m[34m[INFO] [0m<- { 816614, true, f7c000a89d95c9d9306d437442de10fd, 32, 33188 }
12:24:12 [0m[36m[DEBUG] [0m(1) file_protocol::protocol: -> { NAK { channel_id: 816614, hash: "f7c000a89d95c9d9306d437442de10fd", missing_chunks: Some([29, 30]) } }
12:24:12 [0m[34m[INFO] [0mStart receiving file: ls_output.json
12:24:33 [0m[36m[DEBUG] [0m(1) file_protocol::protocol: -> { NAK { channel_id: 816614, hash: "f7c000a89d95c9d9306d437442de10fd", missing_chunks: Some([29, 30]) } }
